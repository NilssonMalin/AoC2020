  //del1
  var inputRows = input.Split(new string[] { "\r\n" }, StringSplitOptions.RemoveEmptyEntries);
            var initialsize = inputRows.Length;

            var grid = new char[20, 20, 20];
            var gridCopy = new char[20, 20, 20];
           
            var i = 0;
            var j = 0;
            var start = (20 - initialsize) / 2;
            for (int x = start; x < start + initialsize; x++)
            {
                i = 0;
                for (int y = start; y < start + initialsize; y++)
                {
                    grid[x, y, 9] = inputRows[i].ToCharArray()[j];
                    gridCopy[x, y, 9] = inputRows[i].ToCharArray()[j];
                    i++;
                }
                j++;
            }
            bool copy = false;
            for (int t = 0; t < 6; t++)
            {
                if (copy)
                {
                    ProcessGrid(grid, gridCopy);
                }
                else
                {
                    ProcessGrid(gridCopy, grid);
                }

                copy = !copy;
            }
            var noOfActive = 0;
            for (int z = 0; z < 20; z++)
            {
                for (int y = 0; y < 20; y++)
                {
                    for (int x = 0; x < 20; x++)
                    {
                     if(grid[x,y,z] == '#')
                        {
                            noOfActive++;
                        }
                    }
                }
            }

            return "active " + noOfActive;
